{"version":3,"file":"AccordionContent.cjs","sources":["../../../../src/components/Accordion/AccordionContent.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { mergeDeep } from \"../../helpers/merge-deep\";\nimport { getTheme } from \"../../theme-store\";\nimport type { DeepPartial } from \"../../types\";\nimport { useAccordionContext } from \"./AccordionPanelContext\";\n\nexport interface FlowbiteAccordionComponentTheme {\n  base: string;\n}\n\nexport interface AccordionContentProps extends ComponentProps<\"div\"> {\n  theme?: DeepPartial<FlowbiteAccordionComponentTheme>;\n}\n\nexport const AccordionContent: FC<AccordionContentProps> = ({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const { isOpen } = useAccordionContext();\n\n  const theme = mergeDeep(getTheme().accordion.content, customTheme);\n\n  return (\n    <div\n      className={twMerge(theme.base, className)}\n      data-testid=\"flowbite-accordion-content\"\n      hidden={!isOpen}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":["useAccordionContext","mergeDeep","getTheme","jsx","twMerge"],"mappings":";;;;;;;;AAOY,MAAC,gBAAgB,GAAG,CAAC;AACjC,EAAE,QAAQ;AACV,EAAE,SAAS;AACX,EAAE,KAAK,EAAE,WAAW,GAAG,EAAE;AACzB,EAAE,GAAG,KAAK;AACV,CAAC,KAAK;AACN,EAAE,MAAM,EAAE,MAAM,EAAE,GAAGA,yCAAmB,EAAE,CAAC;AAC3C,EAAE,MAAM,KAAK,GAAGC,mBAAS,CAACC,cAAQ,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACrE,EAAE,uBAAuBC,cAAG;AAC5B,IAAI,KAAK;AACT,IAAI;AACJ,MAAM,SAAS,EAAEC,qBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC;AAC/C,MAAM,aAAa,EAAE,4BAA4B;AACjD,MAAM,MAAM,EAAE,CAAC,MAAM;AACrB,MAAM,GAAG,KAAK;AACd,MAAM,QAAQ;AACd,KAAK;AACL,GAAG,CAAC;AACJ;;;;"}